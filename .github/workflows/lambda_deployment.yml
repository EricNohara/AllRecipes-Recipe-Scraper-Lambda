name: Test and Deploy Lambda Function

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    env:
      PYTHONPATH: lambda_get_recipes

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Install dependencies
        run: |
          pip install -r lambda_get_recipes/requirements.txt -t lambda_get_recipes/
          pip install pytest

      - name: Run unit tests
        run: |
          export PYTHONPATH=$(pwd)
          pytest lambda_get_recipes/tests/

  deploy:
    name: Deploy to Lambda
    runs-on: ubuntu-latest
    needs: test # <-- Ensures this job only runs if tests pass

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.13"

      - name: Build Lambda dependencies (Amazon Linux)
        run: |
          docker run --rm -v "$PWD/lambda_get_recipes":/var/task lambci/lambda:build-python3.12 \
            pip install -r requirements.txt -t /var/task

      - name: Zip get_recipes
        run: |
          zip -r get_recipes.zip lambda_get_recipes

      - name: List contents of get_recipes.zip
        run: unzip -l get_recipes.zip

      - name: Deploy get_recipes Lambda
        uses: imehedi/actions-awscli-v2@latest
        with:
          args: >
            lambda update-function-code
            --function-name arn:aws:lambda:us-east-2:044445073404:function:AllrecipesRecipeDataScraper
            --zip-file fileb://get_recipes.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-2"
